version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ['/bin/sh', '-c']
    command: ['CompileDaemon -log-prefix=false --build="go build -o ./app main.go" --command="./app"']
    image: chain-reaction-dev
    container_name: api
    restart: on-failure
    volumes:
      - ./main.go:/app/main.go
    ports:
      - 8000:8000
      - 6060:6060
    networks:
      - chain-reaction-network

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - prometheus_data:/prometheus
  #     - ./o11y/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #     - --storage.tsdb.path=/prometheus
  #     - --web.console.libraries=/usr/share/prometheus/console_libraries
  #     - --web.console.templates=/usr/share/prometheus/consoles
  #     - --storage.tsdb.retention.time=24h
  #     - --web.enable-lifecycle
  #   networks:
  #     - chain-reaction-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
  #   environment:
  #     GF_SECURITY_ADMIN_USER: admin
  #     GF_SECURITY_ADMIN_PASSWORD: admin
  #     GF_USERS_ALLOW_SIGN_UP: false
  #     GF_AUTH_ANONYMOUS_ENABLED: true
  #     GF_AUTH_ANONYMOUS_ORG_NAME: "Main Org."
  #     GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
  #     GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/chain-reaction.json
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./o11y/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./o11y/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
  #   networks:
  #     - chain-reaction-network

volumes:
  grafana_data: {}
  prometheus_data: {}

networks:
  chain-reaction-network:
